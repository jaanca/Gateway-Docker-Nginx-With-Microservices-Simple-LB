###################################################################
# Nginx Core
# Path: /etc/nginx/nginx.conf
# Docs: http://nginx.org/en/docs/ngx_core_module.html

user  nginx;
worker_processes  auto; # Default about CPU from node: worker_processes  auto; 

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  8192; # Default worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    # Load Balancer Methods
    #   http://nginx.org/en/docs/http/load_balancing.html
    #   round-robin(Default() — requests to the application servers are distributed in a round-robin fashion,
    #   least_connected — next request is assigned to the server with the least number of active connections,
    #   ip_hash — a hash-function is used to determine what server should be selected for the next request (based on the client’s IP address).

    # upstream = Load Balancer of backend list or group servers to make proxy_pass
    upstream lb_ms_auth {
        # ip_hash;
        server ms_auth:80;
    }

    upstream lb_ms_publication {
        # ip_hash;
        server ms_publication:80;
    }

    upstream lb_ms_replicated {
        # ip_hash;
        server ms_replicated_1:80;
        server ms_replicated_2:80;
        server ms_replicated_3:80;
    }

    include /etc/nginx/conf.d/*.conf;
}